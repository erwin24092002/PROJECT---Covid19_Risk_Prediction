# -*- coding: utf-8 -*-
"""Kiet_SVM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yk3V7P5jbaCIJAGg34TizylyGibb4c7e

### Name: Huynh Viet Tuan Kiet
### Student ID: 20521494
#**SUPPORT VECTOR MACHINE**

# **Setting up environment**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import pickle
import time

from tqdm import tqdm
from sklearn.svm import SVC
from sklearn.model_selection import GridSearchCV
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score

"""
    tools:
        1. C: Regularization parameter
        2. kernel: Specifies the kernel type to be used in the algorithm
        3. decision_function_shape: 
"""

number_of_data = [1, 2, 3]
param_grid = {'C': [0.1, 1, 10, 100],
              'kernel': ["poly", "rbf", "sigmoid"]}
def build_model_GridSearchCV(data_train, data_test, param_grid, num):
    
    print(f"GSCV{num} is pending.........................................")
    # Setup data
    X_train, y_train = data_train.iloc[:200000,:-1], data_train.iloc[:200000,-1]
    X_test, y_test = data_test.iloc[:100000,:-1], data_test.iloc[:100000,-1]

    # Initialization model
    svc=SVC()

    # Create GridSearchCV model
    classification= GridSearchCV(svc, param_grid, refit=True, verbose=3, n_jobs=-1)

    # Train model
    classification.fit(X_train, y_train)

    # get best params
    print(classification.best_params_)

    # Save results
    with open(f"./GridSearchCV_{num}.txt", "a") as file_submit:
        file_submit.write(f"Best parameters: {classification.best_params_}")

data_train = pd.read_csv(f'./lan1/train.csv')
data_test = pd.read_csv(f'./lan1/test.csv')
build_model_GridSearchCV(data_train, data_test, param_grid, 1)